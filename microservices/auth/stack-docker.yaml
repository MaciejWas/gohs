resolver: lts-19.30
packages:
- .
- /home/lemur/baduk-hs/lib
extra-deps:
- timestamp-0.2@sha256:103fe49ce206922d3b14d57d8aff25eaf03c70fef5fcdaeaeb8416aaee163e51,1598
system-ghc: false

docker:
  enable: true
  repo: "fpco/stack-build"
  auto-pull: true

  # If true, the container will be run "detached" (in the background).  Refer
  # to the Docker users guide for information about how to manage containers.
  # This option would rarely make sense in the configuration file, but can be
  # useful on the command-line.  When true, implies `persist`.
  detach: false

  # If true, the container will not be deleted after it terminates.  Refer to
  # the Docker users guide for information about how to manage containers. This
  # option would rarely make sense in the configuration file, but can be
  # useful on the command-line.  `detach` implies `persist`.
  persist: false

  # What to name the Docker container.  Only useful with `detach` or
  # `persist` true.  (default none)
  container-name: "baduk-hs-auth"

  # Sets the network used by docker. Gets directly passed to dockers `net`
  # argument (default: host)
  network: host

  # Additional arguments to pass to `docker run`.  (default none)
  # run-args: ["--net=bridge"]

  # Directories from the host to volume-mount into the container.  If it
  # contains a `:`, the part before the `:` is the directory on the host and
  # the part after the `:` is where it should be mounted in the container.
  # (default none, aside from the project and stack root directories which are
  # always mounted)
  mount:
    - /home/lemur/baduk-hs/lib

  # Sets the volume mount mode, passed directly to `docker`.
  # The default mode (consistent) is safest, but may suffer poor performance
  # on non-Linux platforms such as macOS, where the `delegated` mode will
  # be significantly faster.
  # See https://docs.docker.com/docker-for-mac/osxfs-caching/
  # for valid values and the implications of changing the default.
  mount-mode: delegated

  # Environment variables to set in the container.  Environment variables
  # are not automatically inherited from the host, so if you need any specific
  # variables, use the `--docker-env` command-line argument version of this to
  # pass them in.  (default none)
  env:
    - "FOO=BAR"
    - "BAR=BAZ QUUX"

  # Location of a Docker container-compatible 'stack' executable with the
  # matching version. This executable must be compatible with the Docker
  # image in terms of platform (linux-x86_64) and shared libraries
  # (statically linked is best, otherwise the image needs to have the
  # same shared libraries installed).
  # Valid values are:
  #   host: use the host's executable.  This is the default when the host's
  #     executable is known to work (e.g., from official linux-x86_64 bindist)
  #   download: download a compatible executable matching the host's version.
  #     This is the default when the host's executable is not known to work
  #   image: use the 'stack' executable baked into the image.  The version
  #     must match the host's version
  #   /path/to/stack: path on the host's local filesystem
  stack-exe: host

  # If true (the default when using the local Docker Engine), run processes
  # in the Docker container as the same UID/GID as the host.  The ensures
  # that files written by the container are owned by you on the host.
  # When the Docker Engine is remote (accessed by tcp), defaults to false.
  set-user: true

  # Require the version of the Docker client to be within the specified
  # Cabal-style version range (e.g., ">= 1.6.0 && < 1.9.0")
  # require-docker-version: "any"

